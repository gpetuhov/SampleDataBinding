<?xml version="1.0" encoding="utf-8"?>

<!--Root element of the layout must be like this-->
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <!--Here we declare variables that will provide data for the UI-->
    <!--To bind our variable to the UI, helper classes are generated-->
    <!--We can use import statements here-->
    <data>
        <import type="android.view.View"/>
        <variable name="user" type="com.gpetuhov.android.sampledatabinding.model.User"/>
        <variable name="handlers" type="com.gpetuhov.android.sampledatabinding.handlers.Handlers"/>
    </data>

    <android.support.constraint.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".MainActivity">

        <!--Text for this view is taken from the user variable-->
        <TextView
            android:id="@+id/textView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text='@{"Hello, " + user.name}'
            app:layout_constraintBottom_toTopOf="@+id/isProgrammer"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_chainStyle="packed"
            tools:text="@tools:sample/first_names" />

        <!--We can use expressions, for example to set visibility depending on the User's properties-->
        <TextView
            android:id="@+id/isProgrammer"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/is_programmer"
            android:visibility='@{user.isProgrammer ? View.VISIBLE : View.GONE}'
            app:layout_constraintBottom_toTopOf="@+id/button"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView" />

        <!--Here we set onClick event handling with method reference-->
        <!--And onLongClick - with listener bindings-->
        <!--Note that long click listener must return boolean!-->
        <Button
            android:id="@+id/button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:onClick="@{handlers::onButtonClick}"
            android:onLongClick="@{(view) -> handlers.onButtonLongClick(view, user)}"
            android:text="@string/button"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/isProgrammer" />

    </android.support.constraint.ConstraintLayout>

</layout>